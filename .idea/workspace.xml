<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7385b9b2-a597-4163-8543-931f1614cca8" name="Changes" comment="Implemented the new validateClientOperation() method into createClient() and deleteClient(). &#10;&#10;Added meaningful responses, but still need to test. Also need to write responses for the ResponseEntity.build() returns.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/workforce/freelance/ClientController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/workforce/freelance/ClientController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/workforce/freelance/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/workforce/freelance/UserController.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="9204712e-914f-4ba9-9197-cb742d407060" />
        <option name="url" value="git@github.com:TattieMasher/Freelancing" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Sc63cC4ey8S9WiRwXpaoF74N4O" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/alex/IdeaProjects/Freelancing&quot;,
    &quot;onboarding.tips.debug.path&quot;: &quot;/home/alex/IdeaProjects/Freelancing/src/main/java/org/example/Main.java&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7385b9b2-a597-4163-8543-931f1614cca8" name="Changes" comment="" />
      <created>1689433326337</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1689433326337</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial commit.&#10;&#10;Created a class to manage database connections using HikariCP (https://github.com/brettwooldridge/HikariCP), added mysql-connector-J and Log4J 2.&#10;&#10;Created standard class to model a worker's shift and  a class to hold shifts. &#10;&#10;Tested the above with the simple SQL query in main().">
      <option name="closed" value="true" />
      <created>1689435360594</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1689435360594</updated>
    </task>
    <task id="LOCAL-00002" summary="Initial commit.&#10;&#10;Created a class to manage database connections using HikariCP (https://github.com/brettwooldridge/HikariCP), added mysql-connector-J and Log4J 2.&#10;&#10;Created standard class to model a worker's shift and  a class to hold shifts. &#10;&#10;Tested the above with the simple SQL query in main().">
      <option name="closed" value="true" />
      <created>1689435650705</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1689435650705</updated>
    </task>
    <task id="LOCAL-00003" summary="Created a DAO class for the User objects and made some short/simple tests.">
      <option name="closed" value="true" />
      <created>1689620824070</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1689620824070</updated>
    </task>
    <task id="LOCAL-00004" summary="Created a DAO class for the User objects and made some short/simple tests.">
      <option name="closed" value="true" />
      <created>1689620911536</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1689620911536</updated>
    </task>
    <task id="LOCAL-00005" summary="Created DAO For Shifts and added some more tests. There's been small issues popping up throughout development (documented with TODO comments), which I will soon resolve.">
      <option name="closed" value="true" />
      <created>1689631171973</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1689631171973</updated>
    </task>
    <task id="LOCAL-00006" summary="ShiftDAO now able to construct a shift, if the worker_id and shift_admin_id field in the database is populated.">
      <option name="closed" value="true" />
      <created>1689719115230</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1689719115230</updated>
    </task>
    <task id="LOCAL-00007" summary="Added deleting method to ShiftDAO and some more retrieval methods">
      <option name="closed" value="true" />
      <created>1689725134705</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1689725134705</updated>
    </task>
    <task id="LOCAL-00008" summary="Removed old files from previous, vanilla POJO approach.">
      <option name="closed" value="true" />
      <created>1690497958908</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1690497958908</updated>
    </task>
    <task id="LOCAL-00009" summary="Added @OneToOne relationship within Client objects to hold the primary User, represented as an object.">
      <option name="closed" value="true" />
      <created>1690499501629</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1690499501629</updated>
    </task>
    <task id="LOCAL-00010" summary="In UserController, made the request URIs more readable and sorted the getUserById (public accessor now). Also added an updateUser() method to take a full user JSON and save it to the database.&#10;&#10;In ClientController, I just made the URIs better, by specifying &quot;/get/&quot; in Client-specific requests.">
      <option name="closed" value="true" />
      <created>1690501245350</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1690501245350</updated>
    </task>
    <task id="LOCAL-00011" summary="Added some validation methods to ClientController and implemented them in updateClient().">
      <option name="closed" value="true" />
      <created>1690568590372</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1690568590372</updated>
    </task>
    <task id="LOCAL-00012" summary="Cleaned up updateClient and added a deleteClient method">
      <option name="closed" value="true" />
      <created>1690591540391</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1690591540391</updated>
    </task>
    <task id="LOCAL-00013" summary="Changed id field in User to Long (like that of Client).&#10;&#10;Removed the methods to update individual User fields in UserController and added validation methods. Will adopt a full-JSON request approach, like that in ClientController.&#10;&#10;Also moved some out-of-place comments">
      <option name="closed" value="true" />
      <created>1690592773476</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1690592773476</updated>
    </task>
    <task id="LOCAL-00014" summary="Tests to updateClient failed. Amended the relationship between Clients and Users, but still currently failing. Issue seems to be due to synchronisation with the primaryUser field within Client.">
      <option name="closed" value="true" />
      <created>1690594704655</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1690594704655</updated>
    </task>
    <task id="LOCAL-00015" summary="Fixed updateClient! Built a Client object from an Optional&lt;Client&gt;, populated by findById(). This Client is then amended with the data supplied to the method and returned, to indicate a successful operation (HTTP code 200).">
      <option name="closed" value="true" />
      <created>1690756636081</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1690756636081</updated>
    </task>
    <task id="LOCAL-00016" summary="Added meaningful ResponseEntity messages to updateClient. Combined Client object validation methods into validateClientOperation(), which takes a boolean denoting whether nor not to check the database for a client matching the one supplied. Implemented this into updateClient and deleteClient().">
      <option name="closed" value="true" />
      <created>1690759221656</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1690759221656</updated>
    </task>
    <task id="LOCAL-00017" summary="Implemented the new validateClientOperation() method into createClient() and deleteClient(). &#10;&#10;Added meaningful responses, but still need to test. Also need to write responses for the ResponseEntity.build() returns.">
      <option name="closed" value="true" />
      <created>1690759928617</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1690759928617</updated>
    </task>
    <option name="localTasksCounter" value="18" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial commit.&#10;&#10;Created a class to manage database connections using HikariCP (https://github.com/brettwooldridge/HikariCP), added mysql-connector-J and Log4J 2.&#10;&#10;Created standard class to model a worker's shift and  a class to hold shifts. &#10;&#10;Tested the above with the simple SQL query in main()." />
    <MESSAGE value="Created a DAO class for the User objects and made some short/simple tests." />
    <MESSAGE value="Created DAO For Shifts and added some more tests. There's been small issues popping up throughout development (documented with TODO comments), which I will soon resolve." />
    <MESSAGE value="ShiftDAO now able to construct a shift, if the worker_id and shift_admin_id field in the database is populated." />
    <MESSAGE value="Added deleting method to ShiftDAO and some more retrieval methods" />
    <MESSAGE value="Removed old files from previous, vanilla POJO approach." />
    <MESSAGE value="Added @OneToOne relationship within Client objects to hold the primary User, represented as an object." />
    <MESSAGE value="In UserController, made the request URIs more readable and sorted the getUserById (public accessor now). Also added an updateUser() method to take a full user JSON and save it to the database.&#10;&#10;In ClientController, I just made the URIs better, by specifying &quot;/get/&quot; in Client-specific requests." />
    <MESSAGE value="Added some validation methods to ClientController and implemented them in updateClient()." />
    <MESSAGE value="Cleaned up updateClient and added a deleteClient method" />
    <MESSAGE value="Changed id field in User to Long (like that of Client).&#10;&#10;Removed the methods to update individual User fields in UserController and added validation methods. Will adopt a full-JSON request approach, like that in ClientController.&#10;&#10;Also moved some out-of-place comments" />
    <MESSAGE value="Tests to updateClient failed. Amended the relationship between Clients and Users, but still currently failing. Issue seems to be due to synchronisation with the primaryUser field within Client." />
    <MESSAGE value="Fixed updateClient! Built a Client object from an Optional&lt;Client&gt;, populated by findById(). This Client is then amended with the data supplied to the method and returned, to indicate a successful operation (HTTP code 200)." />
    <MESSAGE value="Added meaningful ResponseEntity messages to updateClient. Combined Client object validation methods into validateClientOperation(), which takes a boolean denoting whether nor not to check the database for a client matching the one supplied. Implemented this into updateClient and deleteClient()." />
    <MESSAGE value="Implemented the new validateClientOperation() method into createClient() and deleteClient(). &#10;&#10;Added meaningful responses, but still need to test. Also need to write responses for the ResponseEntity.build() returns." />
    <option name="LAST_COMMIT_MESSAGE" value="Implemented the new validateClientOperation() method into createClient() and deleteClient(). &#10;&#10;Added meaningful responses, but still need to test. Also need to write responses for the ResponseEntity.build() returns." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.NullPointerException" package="java.lang" />
          <option name="timeStamp" value="7" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>